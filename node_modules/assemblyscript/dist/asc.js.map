{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/./asc.js","webpack://asc/./shim/fs.js","webpack://asc/./shim/path.js","webpack://asc/./shim/process.js","webpack://asc/./util/colors.js","webpack://asc/./util/find.js","webpack://asc/./util/mkdirp.js","webpack://asc/./util/options.js","webpack://asc/./util/utf8.js","webpack://asc/external \"assemblyscript\"","webpack://asc/external \"binaryen\"","webpack://asc/webpack/bootstrap","webpack://asc/webpack/startup","webpack://asc/webpack/runtime/global"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__911__","__WEBPACK_EXTERNAL_MODULE__525__","fs","path","process","exit","code","console","log","Error","toString","stack","utf8","colorsUtil","optionsUtil","mkdirp","find","binaryen","g","dynrequire","WIN","platform","EOL","SEP","setupExtension","ext","startsWith","ext_d","re","RegExp","re_d","re_except_d","re_index","defaultExtension","assemblyscript","Object","defineProperty","get","ready","removeAllListeners","register","project","join","skipIgnore","compilerOptions","target","e_ts","isBundle","version","options","libraryPrefix","LIBRARY_PREFIX","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","libDir","bundled","files","forEach","file","replace","readFileSync","definitionFiles","readDefinition","name","assembly","portable","compileString","sources","output","create","stdout","createMemoryStream","stderr","argv","keys","key","val","opt","type","push","Array","isArray","String","main","concat","readFile","prototype","hasOwnProperty","call","writeFile","contents","listFiles","callback","readFileNode","writeFileNode","listFilesNode","stats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","initializeTime","initializeCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","transformTime","transformCount","extension","optionsResult","parse","opts","arguments","noColors","supported","from","unknownOpts","unknown","length","arg","write","yellow","trailingArgv","trailing","err","red","test","help","out","color","white","cyan","baseDir","normalize","asconfigPath","resolvePath","config","asconfigFile","basename","asconfigDir","dirname","asconfig","getAsconfig","seenAsconfig","Set","add","targets","targetOptions","merge","generalOptions","entries","entry","extends","has","addDefaults","showConfig","JSON","stringify","unique","values","newOptions","setTarget","setNoAssert","noAssert","setExportMemory","noExportMemory","setImportMemory","importMemory","setInitialMemory","initialMemory","setMaximumMemory","maximumMemory","setSharedMemory","sharedMemory","setImportTable","importTable","setExportTable","exportTable","setExplicitStart","explicitStart","setMemoryBase","memoryBase","setTableBase","tableBase","setSourceMap","sourceMap","setNoUnsafe","noUnsafe","setPedantic","pedantic","setLowMemoryLimit","lowMemoryLimit","use","aliases","i","k","part","p","indexOf","alias","substring","trim","setGlobalAlias","features","disable","split","flag","toUpperCase","disableFeature","enable","enableFeature","optimizeLevel","shrinkLevel","optimize","Math","min","max","setOptimizeLevelHints","program","newProgram","transforms","transform","tsNodeRegistered","transformArgs","filename","endsWith","transpileOnly","skipProject","classOrModule","resolve","paths","cwd","assign","error","applyTransform","args","transfromTime","measure","libPath","customLibDirs","lib","map","libFiles","j","l","libText","packageMains","Map","packageBases","getFile","internalPath","dependeePath","sourceText","sourcePath","plainName","indexName","match","packageName","isPackageRoot","undefined","filePath","basePath","traceResolution","parts","slice","currentPath","relative","mainPath","jsonPath","jsonText","json","ascMain","set","mainDir","parseBacklog","nextFile","getDependee","numErrors","checkDiagnostics","message","runtimeName","runtime","runtimePath","runtimeText","isAbsolute","parser","s","normalizedPath","sort","initializeProgram","compile","dispose","noValidate","isValid","validate","trapMode","runPass","debugInfo","debug","usesARC","converge","runPasses","pass","last","toBinary","next","noEmit","outFile","textFile","jsFile","binaryFile","hasStdout","hasOutput","tsdFile","idlFile","wasm","sourceMapURL","writeStdout","sourceRoot","index","text","getSource","sourcesContent","watFormat","toText","idl","buildIDL","tsd","buildTSD","js","toAsmjs","printStats","dirPath","outputFilePath","existsSync","writeFileSync","readdirSync","filter","used","isObject","location","ex","include","diagnostic","nextDiagnostic","formatDiagnostic","isTTY","isError","createStats","fn","start","hrtime","times","formatTime","time","toFixed","format","count","str","len","pad","allocBuffer","Buffer","allocUnsafe","Uint8Array","stream","chunk","buffer","reset","toBuffer","offset","read","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","noLib","types","allowJs","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","trailingSeparator","joined","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","hasRoot","end","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","base","_format","ret","delimiter","win32","umask","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","now","mozNow","msNow","oNow","webkitNow","Date","getTime","proc","isCI","env","colors","gray","GRAY","RESET","RED","green","GREEN","YELLOW","blue","BLUE","magenta","MAGENTA","CYAN","WHITE","findFiles","statSync","isDirectory","iname","made","mode","mkdirSync","err0","stat","err1","sanitizeValue","value","Boolean","trunc","Number","v","propagateDefaults","option","default","exec","parseInt","parseFloat","indent","padding","eol","sbCategories","sbOther","description","sb","noCategories","category","line","hasCategories","currentOptions","parentOptions","parentBaseDir","mergedOptions","mutuallyExclusive","isPath","useNodeResolution","cliOnly","currentValue","parentValue","exclude","includes","defaultValue","string","c","t","fromCharCode","apply","c1","c2","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis","Function","window"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"binaryen\", \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"binaryen\"], root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__911__, __WEBPACK_EXTERNAL_MODULE__525__) {\nreturn ","/**\n * @license\n * Copyright 2020 Daniel Wirtz / The AssemblyScript Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present.\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n */\n\n/* global BUNDLE_VERSION, BUNDLE_LIBRARY, BUNDLE_DEFINITIONS */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\"); // ensure shim\n\nprocess.exit = ((exit) => function(code) {\n  if (code) console.log(new Error(\"exit \" + code.toString()).stack);\n  exit(code);\n})(process.exit);\n\nconst utf8 = require(\"./util/utf8\");\nconst colorsUtil = require(\"./util/colors\");\nconst optionsUtil = require(\"./util/options\");\nconst mkdirp = require(\"./util/mkdirp\");\nconst find = require(\"./util/find\");\nconst binaryen = global.binaryen || (global.binaryen = require(\"binaryen\"));\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\nconst WIN = process.platform === \"win32\";\nconst EOL = WIN ? \"\\r\\n\" : \"\\n\";\nconst SEP = WIN ? \"\\\\\" : \"/\";\n\n// Sets up an extension with its definition counterpart and relevant regexes.\nfunction setupExtension(ext) {\n  if (!ext.startsWith(\".\")) ext = \".\" + ext;\n  return {\n    ext,\n    ext_d: \".d\" + ext,\n    re: new RegExp(\"\\\\\" + ext + \"$\"),\n    re_d: new RegExp(\"\\\\.d\\\\\" + ext + \"$\"),\n    re_except_d: new RegExp(\"^(?!.*\\\\.d\\\\\" + ext + \"$).*\\\\\" + ext + \"$\"),\n    re_index: new RegExp(\"(?:^|[\\\\\\\\\\\\/])index\\\\\" + ext + \"$\")\n  };\n}\n\nconst defaultExtension = setupExtension(\".ts\");\n\n// Proxy Binaryen's ready event\nObject.defineProperty(exports, \"ready\", {\n  get() { return binaryen.ready; }\n});\n\n// Emscripten adds an `uncaughtException` listener to Binaryen that results in an additional\n// useless code fragment on top of an actual error. suppress this:\nif (process.removeAllListeners) process.removeAllListeners(\"uncaughtException\");\n\n// Use distribution files if present, otherwise run the sources directly.\nvar assemblyscript;\n(function loadAssemblyScript() {\n  try {\n    // note that this case will always trigger in recent node.js versions for typical installs\n    // see: https://nodejs.org/api/packages.html#packages_self_referencing_a_package_using_its_name\n    assemblyscript = require(\"assemblyscript\");\n  } catch (e) {\n    try { // `asc` on the command line (unnecessary in recent node)\n      assemblyscript = dynrequire(\"../dist/assemblyscript.js\");\n    } catch (e) {\n      try { // `asc` on the command line without dist files (unnecessary in recent node)\n        dynrequire(\"ts-node\").register({\n          project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\"),\n          skipIgnore: true,\n          compilerOptions: { target: \"ES2016\" }\n        });\n        dynrequire(\"../src/glue/js\");\n        assemblyscript = dynrequire(\"../src\");\n      } catch (e_ts) {\n        try { // `require(\"dist/asc.js\")` in explicit browser tests\n          assemblyscript = dynrequire(\"./assemblyscript\");\n        } catch (e) {\n          throw Error(e_ts.stack + \"\\n---\\n\" + e.stack);\n        }\n      }\n    }\n  }\n})();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** AssemblyScript version. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : dynrequire(\"../package.json\").version;\n\n/** Available CLI options. */\nexports.options = require(\"./asc.json\");\n\n/** Prefix used for library files. */\nexports.libraryPrefix = assemblyscript.LIBRARY_PREFIX;\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 3;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 1;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const bundled = {};\n  find\n    .files(libDir, defaultExtension.re_except_d)\n    .forEach(file => {\n      bundled[file.replace(defaultExtension.re, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\");\n    });\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const readDefinition = name => fs.readFileSync(\n    path.join(__dirname, \"..\", \"std\", name, \"index\" + defaultExtension.ext_d),\n    \"utf8\"\n  );\n  return {\n    assembly: readDefinition(\"assembly\"),\n    portable: readDefinition(\"portable\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { [\"input\" + defaultExtension.ext]: sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream()\n  });\n  var argv = [\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n  ];\n  Object.keys(options || {}).forEach(key => {\n    var val = options[key];\n    var opt = exports.options[key];\n    if (opt && opt.type === \"b\") {\n      if (val) argv.push(\"--\" + key);\n    } else {\n      if (Array.isArray(val)) {\n        val.forEach(val => { argv.push(\"--\" + key, String(val)); });\n      }\n      else argv.push(\"--\" + key, String(val));\n    }\n  });\n  exports.main(argv.concat(Object.keys(sources)), {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => Object.prototype.hasOwnProperty.call(sources, name) ? sources[name] : null,\n    writeFile: (name, contents) => { output[name] = contents; },\n    listFiles: () => []\n  });\n  return output;\n};\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n  let extension = defaultExtension;\n\n  // Output must be specified if not present in the environment\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n\n  // Parse command line options but do not populate option defaults yet\n  const optionsResult = optionsUtil.parse(argv, exports.options, false);\n  let opts = optionsResult.options;\n  argv = optionsResult.arguments;\n\n  if (opts.noColors) {\n    colorsUtil.stdout.supported =\n    colorsUtil.stderr.supported = false;\n  } else {\n    colorsUtil.stdout = colorsUtil.from(stdout);\n    colorsUtil.stderr = colorsUtil.from(stderr);\n  }\n\n  // Check for unknown options\n  const unknownOpts = optionsResult.unknown;\n  if (unknownOpts.length) {\n    unknownOpts.forEach(arg => {\n      stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unknown option '\" + arg + \"'\" + EOL);\n    });\n  }\n\n  // Check for trailing arguments\n  const trailingArgv = optionsResult.trailing;\n  if (trailingArgv.length) {\n    stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unsupported trailing arguments: \" + trailingArgv.join(\" \") + EOL);\n  }\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(colorsUtil.stderr.red(\"FAILURE \") + err.stack.replace(/^ERROR: /i, \"\") + EOL);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (opts.version) {\n    stdout.write(\"Version \" + exports.version + EOL);\n    return callback(null);\n  }\n\n  // Use another extension if requested\n  if (typeof opts.extension === \"string\") {\n    if (/^\\.?[0-9a-zA-Z]{1,14}$/.test(opts.extension)) {\n      extension = setupExtension(opts.extension);\n    } else {\n      return callback(Error(\"Invalid extension: \" + opts.extension));\n    }\n  }\n\n  // Print the help message if requested or no source files are provided\n  if (opts.help || !argv.length) {\n    var out = opts.help ? stdout : stderr;\n    var color = opts.help ? colorsUtil.stdout : colorsUtil.stderr;\n    out.write([\n      color.white(\"SYNTAX\"),\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\n      \"\",\n      color.white(\"EXAMPLES\"),\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext,\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext + \" -b hello.wasm -t hello.wat\",\n      \"  \" + color.cyan(\"asc\") + \" hello1\" + extension.ext + \" hello2\" + extension.ext + \" -b -O > hello.wasm\",\n      \"\",\n      color.white(\"OPTIONS\"),\n    ].concat(\n      optionsUtil.help(exports.options, 24, EOL)\n    ).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // I/O must be specified if not present in the environment\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  // Set up base directory\n  const baseDir = path.normalize(opts.baseDir || \".\");\n\n  // Load additional options from asconfig.json\n  let asconfigPath = optionsUtil.resolvePath(opts.config || \"asconfig.json\", baseDir);\n  let asconfigFile = path.basename(asconfigPath);\n  let asconfigDir = path.dirname(asconfigPath);\n  let asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n\n  const seenAsconfig = new Set();\n  seenAsconfig.add(asconfigPath);\n\n  const target = opts.target || \"release\";\n  while (asconfig) {\n    // Merge target first\n    if (asconfig.targets) {\n      const targetOptions = asconfig.targets[target];\n      if (targetOptions) {\n        opts = optionsUtil.merge(exports.options, opts, targetOptions, asconfigDir);\n      }\n    }\n    // Merge general options\n    const generalOptions = asconfig.options;\n    if (generalOptions) {\n      opts = optionsUtil.merge(exports.options, opts, generalOptions, asconfigDir);\n    }\n\n    // Append entries\n    if (asconfig.entries) {\n      for (let entry of asconfig.entries) {\n        argv.push(optionsUtil.resolvePath(entry, asconfigDir));\n      }\n    }\n\n    // Look up extended asconfig and repeat\n    if (asconfig.extends) {\n      asconfigPath = optionsUtil.resolvePath(asconfig.extends, asconfigDir, true);\n      asconfigFile = path.basename(asconfigPath);\n      asconfigDir = path.dirname(asconfigPath);\n      if (seenAsconfig.has(asconfigPath)) break;\n      seenAsconfig.add(asconfigPath);\n      asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n    } else {\n      break;\n    }\n  }\n\n  // Populate option defaults once user-defined options are set\n  optionsUtil.addDefaults(exports.options, opts);\n\n  // If showConfig print options and exit\n  if (opts.showConfig) {\n    stderr.write(JSON.stringify({\n      options: opts,\n      entries: argv\n    }, null, 2));\n    return callback(null);\n  }\n\n  // create a unique set of values\n  function unique(values) {\n    return [...new Set(values)];\n  }\n\n  // Set up options\n  const compilerOptions = assemblyscript.newOptions();\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setNoAssert(compilerOptions, opts.noAssert);\n  assemblyscript.setExportMemory(compilerOptions, !opts.noExportMemory);\n  assemblyscript.setImportMemory(compilerOptions, opts.importMemory);\n  assemblyscript.setInitialMemory(compilerOptions, opts.initialMemory >>> 0);\n  assemblyscript.setMaximumMemory(compilerOptions, opts.maximumMemory >>> 0);\n  assemblyscript.setSharedMemory(compilerOptions, opts.sharedMemory);\n  assemblyscript.setImportTable(compilerOptions, opts.importTable);\n  assemblyscript.setExportTable(compilerOptions, opts.exportTable);\n  assemblyscript.setExplicitStart(compilerOptions, opts.explicitStart);\n  assemblyscript.setMemoryBase(compilerOptions, opts.memoryBase >>> 0);\n  assemblyscript.setTableBase(compilerOptions, opts.tableBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, opts.sourceMap != null);\n  assemblyscript.setNoUnsafe(compilerOptions, opts.noUnsafe);\n  assemblyscript.setPedantic(compilerOptions, opts.pedantic);\n  assemblyscript.setLowMemoryLimit(compilerOptions, opts.lowMemoryLimit >>> 0);\n\n  // Add or override aliases if specified\n  if (opts.use) {\n    let aliases = opts.use;\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      let alias = part.substring(0, p).trim();\n      let name = part.substring(p + 1).trim();\n      if (!alias.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      assemblyscript.setGlobalAlias(compilerOptions, alias, name);\n    }\n  }\n\n  // Disable default features if specified\n  var features;\n  if ((features = opts.disable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.disableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Enable experimental features if specified\n  if ((features = opts.enable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.enableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Set up optimization levels\n  var optimizeLevel = 0;\n  var shrinkLevel = 0;\n  if (opts.optimize) {\n    optimizeLevel = exports.defaultOptimizeLevel;\n    shrinkLevel = exports.defaultShrinkLevel;\n  }\n  if (typeof opts.optimizeLevel === \"number\") optimizeLevel = opts.optimizeLevel;\n  if (typeof opts.shrinkLevel === \"number\") shrinkLevel = opts.shrinkLevel;\n  optimizeLevel = Math.min(Math.max(optimizeLevel, 0), 3);\n  shrinkLevel = Math.min(Math.max(shrinkLevel, 0), 2);\n  assemblyscript.setOptimizeLevelHints(compilerOptions, optimizeLevel, shrinkLevel);\n\n  // Initialize the program\n  const program = assemblyscript.newProgram(compilerOptions);\n\n  // Set up transforms\n  const transforms = [];\n  if (opts.transform) {\n    let tsNodeRegistered = false;\n    let transformArgs = unique(opts.transform);\n    for (let i = 0, k = transformArgs.length; i < k; ++i) {\n      let filename = transformArgs[i].trim();\n      if (!tsNodeRegistered && filename.endsWith(\".ts\")) { // ts-node requires .ts specifically\n        dynrequire(\"ts-node\").register({ transpileOnly: true, skipProject: true, compilerOptions: { target: \"ES2016\" } });\n        tsNodeRegistered = true;\n      }\n      try {\n        const classOrModule = dynrequire(dynrequire.resolve(filename, { paths: [baseDir, process.cwd()] }));\n        if (typeof classOrModule === \"function\") {\n          Object.assign(classOrModule.prototype, {\n            program,\n            baseDir,\n            stdout,\n            stderr,\n            log: console.error,\n            readFile,\n            writeFile,\n            listFiles\n          });\n          transforms.push(new classOrModule());\n        } else {\n          transforms.push(classOrModule); // legacy module\n        }\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n\n  function applyTransform(name, ...args) {\n    for (let i = 0, k = transforms.length; i < k; ++i) {\n      let transform = transforms[i];\n      if (typeof transform[name] === \"function\") {\n        try {\n          stats.transformCount++;\n          stats.transfromTime += measure(() => {\n            transform[name](...args);\n          });\n        } catch (e) {\n          return e;\n        }\n      }\n    }\n  }\n\n  // Parse library files\n  Object.keys(exports.libraryFiles).forEach(libPath => {\n    if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, exports.libraryFiles[libPath], exports.libraryPrefix + libPath + extension.ext, false);\n    });\n  });\n  let customLibDirs = [];\n  if (opts.lib) {\n    let lib = opts.lib;\n    if (typeof lib === \"string\") lib = lib.split(\",\");\n    customLibDirs.push(...lib.map(p => p.trim()));\n    customLibDirs = unique(customLibDirs); // `lib` and `customLibDirs` may include duplicates\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n      let libDir = customLibDirs[i];\n      let libFiles;\n      if (libDir.endsWith(extension.ext)) {\n        libFiles = [ path.basename(libDir) ];\n        libDir = path.dirname(libDir);\n      } else {\n        libFiles = listFiles(libDir, baseDir) || [];\n      }\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\n        let libPath = libFiles[j];\n        let libText = readFile(libPath, libDir);\n        if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\n        stats.parseCount++;\n        exports.libraryFiles[libPath.replace(extension.re, \"\")] = libText;\n        stats.parseTime += measure(() => {\n          assemblyscript.parse(program, libText, exports.libraryPrefix + libPath, false);\n        });\n      }\n    }\n  }\n  opts.path = opts.path || [];\n\n  // Maps package names to parent directory\n  var packageMains = new Map();\n  var packageBases = new Map();\n\n  // Gets the file matching the specified source path, imported at the given dependee path\n  function getFile(internalPath, dependeePath) {\n    var sourceText = null; // text reported back to the compiler\n    var sourcePath = null; // path reported back to the compiler\n\n    const libraryPrefix = exports.libraryPrefix;\n    const libraryFiles = exports.libraryFiles;\n\n    // Try file.ext, file/index.ext, file.d.ext\n    if (!internalPath.startsWith(libraryPrefix)) {\n      if ((sourceText = readFile(sourcePath = internalPath + extension.ext, baseDir)) == null) {\n        if ((sourceText = readFile(sourcePath = internalPath + \"/index\" + extension.ext, baseDir)) == null) {\n          // portable d.ext: uses the .js file next to it in JS or becomes an import in Wasm\n          sourcePath = internalPath + extension.ext;\n          sourceText = readFile(internalPath + extension.ext_d, baseDir);\n        }\n      }\n\n    // Search library in this order: stdlib, custom lib dirs, paths\n    } else {\n      const plainName = internalPath.substring(libraryPrefix.length);\n      const indexName = plainName + \"/index\";\n      if (Object.prototype.hasOwnProperty.call(libraryFiles, plainName)) {\n        sourceText = libraryFiles[plainName];\n        sourcePath = libraryPrefix + plainName + extension.ext;\n      } else if (Object.prototype.hasOwnProperty.call(libraryFiles, indexName)) {\n        sourceText = libraryFiles[indexName];\n        sourcePath = libraryPrefix + indexName + extension.ext;\n      } else { // custom lib dirs\n        for (const libDir of customLibDirs) {\n          if ((sourceText = readFile(plainName + extension.ext, libDir)) != null) {\n            sourcePath = libraryPrefix + plainName + extension.ext;\n            break;\n          } else {\n            if ((sourceText = readFile(indexName + extension.ext, libDir)) != null) {\n              sourcePath = libraryPrefix + indexName + extension.ext;\n              break;\n            }\n          }\n        }\n        if (sourceText == null) { // paths\n          const match = internalPath.match(/^~lib\\/((?:@[^/]+\\/)?[^/]+)(?:\\/(.+))?/); // ~lib/(pkg)/(path), ~lib/(@org/pkg)/(path)\n          if (match) {\n            const packageName = match[1];\n            const isPackageRoot = match[2] === undefined;\n            const filePath = isPackageRoot ? \"index\" : match[2];\n            const basePath = packageBases.has(dependeePath) ? packageBases.get(dependeePath) : \".\";\n            if (opts.traceResolution) stderr.write(\"Looking for package '\" + packageName + \"' file '\" + filePath + \"' relative to '\" + basePath + \"'\" + EOL);\n            const paths = [];\n            const parts = path.resolve(baseDir, basePath).split(SEP);\n            for (let i = parts.length, k = WIN ? 1 : 0; i >= k; --i) {\n              if (parts[i - 1] !== \"node_modules\") paths.push(parts.slice(0, i).join(SEP) + SEP + \"node_modules\");\n            }\n            for (const currentPath of paths.concat(...opts.path).map(p => path.relative(baseDir, p))) {\n              if (opts.traceResolution) stderr.write(\"  in \" + path.join(currentPath, packageName) + EOL);\n              let mainPath = \"assembly\";\n              if (packageMains.has(packageName)) { // use cached\n                mainPath = packageMains.get(packageName);\n              } else { // evaluate package.json\n                let jsonPath = path.join(currentPath, packageName, \"package.json\");\n                let jsonText = readFile(jsonPath, baseDir);\n                if (jsonText != null) {\n                  try {\n                    let json = JSON.parse(jsonText);\n                    if (typeof json.ascMain === \"string\") {\n                      mainPath = json.ascMain.replace(extension.re_index, \"\");\n                      packageMains.set(packageName, mainPath);\n                    }\n                  } catch (e) { /* nop */ }\n                }\n              }\n              const mainDir = path.join(currentPath, packageName, mainPath);\n              const plainName = filePath;\n              if ((sourceText = readFile(path.join(mainDir, plainName + extension.ext), baseDir)) != null) {\n                sourcePath = libraryPrefix + packageName + \"/\" + plainName + extension.ext;\n                packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, plainName + extension.ext) + EOL);\n                break;\n              } else if (!isPackageRoot) {\n                const indexName = filePath + \"/index\";\n                if ((sourceText = readFile(path.join(mainDir, indexName + extension.ext), baseDir)) !== null) {\n                  sourcePath = libraryPrefix + packageName + \"/\" + indexName + extension.ext;\n                  packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                  if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, indexName + extension.ext) + EOL);\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // No such file\n    if (sourceText == null) return null;\n    return { sourceText, sourcePath };\n  }\n\n  // Parses the backlog of imported files after including entry files\n  function parseBacklog() {\n    var internalPath;\n    while ((internalPath = assemblyscript.nextFile(program)) != null) {\n      let file = getFile(internalPath, assemblyscript.getDependee(program, internalPath));\n      if (file) {\n        stats.parseCount++;\n        stats.parseTime += measure(() => {\n          assemblyscript.parse(program, file.sourceText, file.sourcePath, false);\n        });\n      } else {\n        assemblyscript.parse(program, null, internalPath + extension.ext, false);\n      }\n    }\n    var numErrors = checkDiagnostics(program, stderr);\n    if (numErrors) {\n      const err = Error(numErrors + \" parse error(s)\");\n      err.stack = err.message; // omit stack\n      return callback(err);\n    }\n  }\n\n  // Include runtime template before entry files so its setup runs first\n  {\n    let runtimeName = String(opts.runtime);\n    let runtimePath = \"rt/index-\" + runtimeName;\n    let runtimeText = exports.libraryFiles[runtimePath];\n    if (runtimeText == null) {\n      runtimePath = runtimeName;\n      runtimeText = readFile(runtimePath + extension.ext, baseDir);\n      if (runtimeText == null) return callback(Error(\"Runtime '\" + runtimeName + \"' not found.\"));\n    } else {\n      runtimePath = \"~lib/\" + runtimePath;\n    }\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, runtimeText, runtimePath + extension.ext, true);\n    });\n  }\n\n  // Include entry files\n  for (let i = 0, k = argv.length; i < k; ++i) {\n    const filename = argv[i];\n\n    let sourcePath = String(filename).replace(/\\\\/g, \"/\").replace(extension.re, \"\").replace(/[\\\\/]$/, \"\");\n\n    // Setting the path to relative path\n    sourcePath = path.isAbsolute(sourcePath) ? path.relative(baseDir, sourcePath).replace(/\\\\/g, \"/\") : sourcePath;\n\n    // Try entryPath.ext, then entryPath/index.ext\n    let sourceText = readFile(sourcePath + extension.ext, baseDir);\n    if (sourceText == null) {\n      sourceText = readFile(sourcePath + \"/index\" + extension.ext, baseDir);\n      if (sourceText != null) sourcePath += \"/index\" + extension.ext;\n      else sourcePath += extension.ext;\n    } else {\n      sourcePath += extension.ext;\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, sourceText, sourcePath, true);\n    });\n  }\n\n  // Parse entry files\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Call afterParse transform hook\n  {\n    let error = applyTransform(\"afterParse\", program.parser);\n    if (error) return callback(error);\n  }\n\n  // Parse additional files, if any\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Print files and exit if listFiles\n  if (opts.listFiles) {\n    // FIXME: not a proper C-like API\n    stderr.write(program.sources.map(s => s.normalizedPath).sort().join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Pre-emptively initialize the program\n  stats.initializeCount++;\n  stats.initializeTime += measure(() => {\n    assemblyscript.initializeProgram(program);\n  });\n\n  // Call afterInitialize transform hook\n  {\n    let error = applyTransform(\"afterInitialize\", program);\n    if (error) return callback(error);\n  }\n\n  var module;\n  stats.compileCount++;\n  stats.compileTime += measure(() => {\n    module = assemblyscript.compile(program);\n  });\n  var numErrors = checkDiagnostics(program, stderr);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(numErrors + \" compile error(s)\");\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Call afterCompile transform hook\n  {\n    let error = applyTransform(\"afterCompile\", module);\n    if (error) return callback(error);\n  }\n\n  // Validate the module if requested\n  if (!opts.noValidate) {\n    stats.validateCount++;\n    let isValid;\n    stats.validateTime += measure(() => {\n      isValid = module.validate();\n    });\n    if (!isValid) {\n      module.dispose();\n      return callback(Error(\"validate error\"));\n    }\n  }\n\n  // Set Binaryen-specific options\n  if (opts.trapMode === \"clamp\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-clamp\");\n    });\n  } else if (opts.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-js\");\n    });\n  } else if (opts.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  // Optimize the module\n  const debugInfo = opts.debug;\n  const usesARC = opts.runtime == \"half\" || opts.runtime == \"full\";\n  const converge = opts.converge;\n  const runPasses = [];\n  if (opts.runPasses) {\n    if (typeof opts.runPasses === \"string\") {\n      opts.runPasses = opts.runPasses.split(\",\");\n    }\n    if (opts.runPasses.length) {\n      opts.runPasses.forEach(pass => {\n        if (runPasses.indexOf(pass = pass.trim()) < 0)\n          runPasses.push(pass);\n      });\n    }\n  }\n\n  stats.optimizeTime += measure(() => {\n    stats.optimizeCount++;\n    module.optimize(optimizeLevel, shrinkLevel, debugInfo, usesARC);\n    module.runPasses(runPasses);\n    if (converge) {\n      let last = module.toBinary();\n      do {\n        stats.optimizeCount++;\n        module.optimize(optimizeLevel, shrinkLevel, debugInfo, usesARC);\n        module.runPasses(runPasses);\n        let next = module.toBinary();\n        if (next.output.length >= last.output.length) {\n          if (next.output.length > last.output.length) {\n            stderr.write(\"Last converge was suboptimial.\" + EOL);\n          }\n          break;\n        }\n        last = next;\n      } while (true);\n    }\n  });\n\n  // Prepare output\n  if (!opts.noEmit) {\n    if (opts.outFile != null) {\n      if (/\\.was?t$/.test(opts.outFile) && opts.textFile == null) {\n        opts.textFile = opts.outFile;\n      } else if (/\\.js$/.test(opts.outFile) && opts.jsFile == null) {\n        opts.jsFile = opts.outFile;\n      } else if (opts.binaryFile == null) {\n        opts.binaryFile = opts.outFile;\n      }\n    }\n\n    let hasStdout = false;\n    let hasOutput = opts.textFile != null\n                 || opts.binaryFile != null\n                 || opts.jsFile != null\n                 || opts.tsdFile != null\n                 || opts.idlFile != null;\n\n    // Write binary\n    if (opts.binaryFile != null) {\n      let basename = path.basename(opts.binaryFile);\n      let sourceMapURL = opts.sourceMap != null\n        ? opts.sourceMap.length\n          ? opts.sourceMap\n          : \"./\" + basename + \".map\"\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        wasm = module.toBinary(sourceMapURL);\n      });\n\n      if (opts.binaryFile.length) {\n        writeFile(opts.binaryFile, wasm.output, baseDir);\n      } else {\n        writeStdout(wasm.output);\n        hasStdout = true;\n      }\n\n      // Post-process source map\n      if (wasm.sourceMap != null) {\n        if (opts.binaryFile.length) {\n          let map = JSON.parse(wasm.sourceMap);\n          map.sourceRoot = \"./\" + basename;\n          let contents = [];\n          map.sources.forEach((name, index) => {\n            let text = assemblyscript.getSource(program, name.replace(extension.re, \"\"));\n            if (text == null) return callback(Error(\"Source of file '\" + name + \"' not found.\"));\n            contents[index] = text;\n          });\n          map.sourcesContent = contents;\n          writeFile(path.join(\n            path.dirname(opts.binaryFile),\n            path.basename(sourceMapURL)\n          ).replace(/^\\.\\//, \"\"), JSON.stringify(map), baseDir);\n        } else {\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\n        }\n      }\n    }\n\n    // Write text (also fallback)\n    if (opts.textFile != null || !hasOutput) {\n      let out;\n      if (opts.textFile != null && opts.textFile.length) {\n        // use superset text format when extension is `.wast`.\n        // Otherwise use official stack IR format (wat).\n        let watFormat = !opts.textFile.endsWith('.wast');\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          out = module.toText(watFormat);\n        });\n        writeFile(opts.textFile, out, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          out = module.toText();\n        });\n        writeStdout(out);\n      }\n    }\n\n    // Write WebIDL\n    if (opts.idlFile != null) {\n      let idl;\n      if (opts.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeFile(opts.idlFile, idl, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeStdout(idl);\n        hasStdout = true;\n      }\n    }\n\n    // Write TypeScript definition\n    if (opts.tsdFile != null) {\n      let tsd;\n      if (opts.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeFile(opts.tsdFile, tsd, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeStdout(tsd);\n        hasStdout = true;\n      }\n    }\n\n    // Write JS (modifies the binary, so must be last)\n    if (opts.jsFile != null) {\n      let js;\n      if (opts.jsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.toAsmjs();\n        });\n        writeFile(opts.jsFile, js, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.toAsmjs();\n        });\n        writeStdout(js);\n      }\n    }\n  }\n\n  module.dispose();\n  if (opts.measure) {\n    printStats(stats, stderr);\n  }\n\n  return callback(null);\n\n  function readFileNode(filename, baseDir) {\n    let name = path.resolve(baseDir, filename);\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(name, \"utf8\");\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents, baseDir) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        const dirPath = path.resolve(baseDir, path.dirname(filename));\n        filename = path.basename(filename);\n        const outputFilePath = path.join(dirPath, filename);\n        if (!fs.existsSync(dirPath)) mkdirp(dirPath);\n        fs.writeFileSync(outputFilePath, contents);\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname, baseDir) {\n    var files;\n    try {\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        files = fs.readdirSync(path.join(baseDir, dirname))\n          .filter(file => extension.re_except_d.test(file));\n      });\n      return files;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      stdout.write(contents);\n    });\n  }\n};\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(arg) {\n  return toString.call(arg) === \"[object Object]\";\n}\n\nfunction getAsconfig(file, baseDir, readFile) {\n  const contents = readFile(file, baseDir);\n  const location = path.join(baseDir, file);\n  if (!contents) return null;\n\n  // obtain the configuration\n  let config;\n  try {\n    config = JSON.parse(contents);\n  } catch(ex) {\n    throw new Error(\"Asconfig is not valid json: \" + location);\n  }\n\n  // validate asconfig shape\n  if (config.options && !isObject(config.options)) {\n    throw new Error(\"Asconfig.options is not an object: \" + location);\n  }\n\n  if (config.include && !Array.isArray(config.include)) {\n    throw new Error(\"Asconfig.include is not an array: \" + location);\n  }\n\n  if (config.targets) {\n    if (!isObject(config.targets)) {\n      throw new Error(\"Asconfig.targets is not an object: \" + location);\n    }\n    const targets = Object.keys(config.targets);\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if (!isObject(config.targets[target])) {\n        throw new Error(\"Asconfig.targets.\" + target + \" is not an object: \" + location);\n      }\n    }\n  }\n\n  if (config.extends && typeof config.extends !== \"string\") {\n    throw new Error(\"Asconfig.extends is not a string: \" + location);\n  }\n\n  return config;\n}\n\nexports.getAsconfig = getAsconfig;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(program, stderr) {\n  var diagnostic;\n  var numErrors = 0;\n  while ((diagnostic = assemblyscript.nextDiagnostic(program)) != null) {\n    if (stderr) {\n      stderr.write(\n        assemblyscript.formatDiagnostic(diagnostic, stderr.isTTY, true) +\n        EOL + EOL\n      );\n    }\n    if (assemblyscript.isError(diagnostic)) ++numErrors;\n  }\n  return numErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    initializeTime: 0,\n    initializeCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0,\n    transformTime: 0,\n    transformCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction pad(str, len) {\n  while (str.length < len) str = \" \" + str;\n  return str;\n}\n\n/** Formats a high resolution time to a human readable string. */\nfunction formatTime(time) {\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"n/a\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  const format = (time, count) => pad(formatTime(time), 12) + \"  n=\" + count;\n  (output || process.stdout).write([\n    \"I/O Read   : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write  : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse      : \" + format(stats.parseTime, stats.parseCount),\n    \"Initialize : \" + format(stats.initializeTime, stats.initializeCount),\n    \"Compile    : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit       : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate   : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize   : \" + format(stats.optimizeTime, stats.optimizeCount),\n    \"Transform  : \" + format(stats.transformTime, stats.transformCount)\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\n  ? global.Buffer.allocUnsafe || (len => new global.Buffer(len))\n  : len => new Uint8Array(len);\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = allocBuffer(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.reset = function() {\n    stream.length = 0;\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = allocBuffer(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n","module.exports = {};\n","const process = require(\"process\"); // ensure shim\n\n// https://github.com/browserify/path-browserify v1.0.1\n//\n// Copyright (c) 2013 James Halliday\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    if (from === \".\") return to; // FIX for 'odule.ts' (see issue #1398)\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = {\n  platform: \"linux\",\n  cwd() {\n    return \".\";\n  },\n  umask() {\n    return 0;\n  },\n  hrtime,\n  argv: []\n};\n\n// https://github.com/kumavis/browser-process-hrtime v1.0.0\n//\n// Copyright 2014 kumavis\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime(); };\n\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance);\n  var seconds = Math.floor(clocktime * 1e-3);\n  var nanoseconds = Math.floor(clocktime * 1e6 - seconds * 1e9);\n  if (previousTimestamp) {\n    seconds -= previousTimestamp[0];\n    nanoseconds -= previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [ seconds, nanoseconds ];\n}\n","/**\n * @fileoverview Terminal colors utility.\n * @license Apache-2.0\n */\n\nvar proc = typeof process !== \"undefined\" && process || {};\nvar isCI = proc.env && \"CI\" in proc.env; // doesn't work when bundled because 'process' is a mock\n\nfunction from(stream, base) {\n  var colors = base || {};\n  colors.supported = (stream && !!stream.isTTY) || isCI;\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\n  return colors;\n}\n\nexports.stdout = from(proc.stdout, exports);\nexports.stderr = from(proc.stderr);\nexports.from = from;\n\nexports.GRAY = \"\\u001b[90m\";\nexports.RED = \"\\u001b[91m\";\nexports.GREEN = \"\\u001b[92m\";\nexports.YELLOW = \"\\u001b[93m\";\nexports.BLUE = \"\\u001b[94m\";\nexports.MAGENTA = \"\\u001b[95m\";\nexports.CYAN = \"\\u001b[96m\";\nexports.WHITE = \"\\u001b[97m\";\nexports.RESET = \"\\u001b[0m\";\n","/**\n * @fileoverview File finding utility.\n * @license Apache-2.0\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nfunction findFiles(dirname, filter) {\n  var out = [];\n  fs.readdirSync(dirname).forEach(name => {\n    if (fs.statSync(path.join(dirname, name)).isDirectory()) {\n      findFiles(path.join(dirname, name), filter).forEach(iname => out.push(name + \"/\" + iname));\n    } else if (!filter || typeof filter === \"function\" ? filter(name) : filter.test(name)) {\n      out.push(name);\n    }\n  });\n  return out;\n}\n\nexports.files = findFiles;\n","/**\n * @fileoverview Recursive mkdir.\n * @license\n * Copyright 2010 James Halliday (mail@substack.net)\n *\n * This project is free software released under the MIT/X11 license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst process = require(\"process\"); // ensure shim\n\nmodule.exports = function mkdirp(p, opts, made) {\n  if (!opts || typeof opts !== \"object\") {\n    opts = { mode: opts };\n  }\n  var mode = opts.mode;\n  if (mode === undefined) {\n    mode = 0o777 & (~process.umask());\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    fs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case \"ENOENT\":\n        made = mkdirp(path.dirname(p), opts, made);\n        mkdirp(p, opts, made);\n        break;\n      default:\n        var stat;\n        try {\n          stat = fs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};\n","/**\n * @fileoverview Command line options utility.\n * @license Apache-2.0\n */\n\nconst path = require(\"path\");\nconst colorsUtil = require(\"./colors\");\n\n// type | meaning\n// -----|---------------\n// b    | boolean\n// i    | integer\n// f    | float\n// s    | string\n// I    | integer array\n// F    | float array\n// S    | string array\n\n/** Parses the specified command line arguments according to the given configuration. */\nfunction parse(argv, config, propagateDefaults = true) {\n  var options = {};\n  var unknown = [];\n  var args = [];\n  var trailing = [];\n\n  // make an alias map and initialize defaults\n  var aliases = {};\n  Object.keys(config).forEach(key => {\n    if (key.startsWith(\" \")) return;\n    var option = config[key];\n    if (option.alias != null) {\n      if (typeof option.alias === \"string\") aliases[option.alias] = key;\n      else if (Array.isArray(option.alias)) option.alias.forEach(alias => aliases[alias] = key);\n    }\n    if (propagateDefaults && option.default != null) options[key] = option.default;\n  });\n\n  // iterate over argv\n  for (var i = 0, k = (argv = argv.slice()).length; i < k; ++i) {\n    let arg = argv[i];\n    if (arg == \"--\") { ++i; break; }\n    let match = /^(?:(-\\w)(?:=(.*))?|(--\\w{2,})(?:=(.*))?)$/.exec(arg), option, key;\n    if (match) {\n      if (config[arg]) option = config[key = arg]; // exact\n      else if (match[1] != null) { // alias\n        option = config[key = aliases[match[1].substring(1)]];\n        if (option && match[2] != null) argv[i--] = match[2];\n      } else if (match[3] != null) { // full\n        option = config[key = match[3].substring(2)];\n        if (option && match[4] != null) argv[i--] = match[4];\n      }\n    } else {\n      if (arg.charCodeAt(0) == 45) option = config[key = arg]; // exact\n      else { args.push(arg); continue; } // argument\n    }\n    if (option) {\n      if (option.value) {\n        // alias setting fixed values\n        Object.keys(option.value).forEach(k => options[k] = option.value[k]);\n      } else if (option.type == null || option.type === \"b\") {\n        // boolean flag not taking a value\n        options[key] = true;\n      } else {\n        if (i + 1 < argv.length && argv[i + 1].charCodeAt(0) != 45) {\n          // non-boolean with given value\n          switch (option.type) {\n            case \"i\": options[key] = parseInt(argv[++i], 10); break;\n            case \"I\": options[key] = (options[key] || []).concat(parseInt(argv[++i], 10)); break;\n            case \"f\": options[key] = parseFloat(argv[++i]); break;\n            case \"F\": options[key] = (options[key] || []).concat(parseFloat(argv[++i])); break;\n            case \"s\": options[key] = String(argv[++i]); break;\n            case \"S\": options[key] = (options[key] || []).concat(argv[++i].split(\",\")); break;\n            default: unknown.push(arg); --i;\n          }\n        } else {\n          // non-boolean with omitted value\n          switch (option.type) {\n            case \"i\":\n            case \"f\": options[key] = option.default || 0; break;\n            case \"s\": options[key] = option.default || \"\"; break;\n            case \"I\":\n            case \"F\":\n            case \"S\": options[key] = option.default || []; break;\n            default: unknown.push(arg);\n          }\n        }\n      }\n    } else unknown.push(arg);\n  }\n  while (i < k) trailing.push(argv[i++]); // trailing\n  if (propagateDefaults) addDefaults(config, options);\n\n  return { options, unknown, arguments: args, trailing };\n}\n\nexports.parse = parse;\n\n/** Generates the help text for the specified configuration. */\nfunction help(config, options) {\n  if (!options) options = {};\n  var indent = options.indent || 2;\n  var padding = options.padding || 24;\n  var eol = options.eol || \"\\n\";\n  var sbCategories = {};\n  var sbOther = [];\n  Object.keys(config).forEach(key => {\n    var option = config[key];\n    if (option.description == null) return;\n    var text = \"\";\n    while (text.length < indent) text += \" \";\n    text += \"--\" + key;\n    if (option.alias) text += \", -\" + option.alias;\n    while (text.length < padding) text += \" \";\n    var sb;\n    if (!options.noCategories && option.category) {\n      if (!(sb = sbCategories[option.category])) {\n        sbCategories[option.category] = sb = [];\n      }\n    } else {\n      sb = sbOther;\n    }\n    if (Array.isArray(option.description)) {\n      sb.push(text + option.description[0] + option.description.slice(1).map(line => {\n        for (let i = 0; i < padding; ++i) line = \" \" + line;\n        return eol + line;\n      }).join(\"\"));\n    } else sb.push(text + option.description);\n  });\n  var sb = [];\n  var hasCategories = false;\n  Object.keys(sbCategories).forEach(category => {\n    hasCategories = true;\n    sb.push(eol + \" \" + colorsUtil.gray(category) + eol);\n    sb.push(sbCategories[category].join(eol));\n  });\n  if (hasCategories) {\n    sb.push(eol + \" \" + colorsUtil.gray(\"Other\") + eol);\n  }\n  sb.push(sbOther.join(eol));\n  return sb.join(eol);\n}\n\nexports.help = help;\n\n/** Sanitizes an option value to be a valid value of the option's type. */\nfunction sanitizeValue(value, type) {\n  if (value != null) {\n    switch (type) {\n      case undefined:\n      case \"b\": return Boolean(value);\n      case \"i\": return Math.trunc(value) || 0;\n      case \"f\": return Number(value) || 0;\n      case \"s\": {\n        if (value === true) return \"\";\n        return String(value);\n      }\n      case \"I\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Math.trunc(v) || 0);\n      }\n      case \"F\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Number(v) || 0);\n      }\n      case \"S\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(String);\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Merges two sets of options into one, preferring the current over the parent set. */\nfunction merge(config, currentOptions, parentOptions, parentBaseDir) {\n  const mergedOptions = {};\n  for (const [key, { type, mutuallyExclusive, isPath, useNodeResolution, cliOnly }] of Object.entries(config)) {\n    let currentValue = sanitizeValue(currentOptions[key], type);\n    let parentValue = sanitizeValue(parentOptions[key], type);\n    if (currentValue == null) {\n      if (parentValue != null) {\n        // only parent value present\n        if (cliOnly) continue;\n        if (Array.isArray(parentValue)) {\n          let exclude;\n          if (isPath) {\n            parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n          }\n          if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n            mergedOptions[key] = parentValue.filter(value => !exclude.includes(value));\n          } else {\n            mergedOptions[key] = parentValue.slice();\n          }\n        } else {\n          if (isPath) {\n            parentValue = resolvePath(parentValue, parentBaseDir, useNodeResolution);\n          }\n          mergedOptions[key] = parentValue;\n        }\n      }\n    } else if (parentValue == null) {\n      // only current value present\n      if (Array.isArray(currentValue)) {\n        mergedOptions[key] = currentValue.slice();\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    } else {\n      // both current and parent values present\n      if (Array.isArray(currentValue)) {\n        if (cliOnly) {\n          mergedOptions[key] = currentValue.slice();\n          continue;\n        }\n        let exclude;\n        if (isPath) {\n          parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n        }\n        if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value) && !exclude.includes(value))\n          ];\n        } else {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value)) // dedup\n          ];\n        }\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    }\n  }\n  return mergedOptions;\n}\n\nexports.merge = merge;\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\n/** Resolves a single possibly relative path. Keeps absolute paths, otherwise prepends baseDir. */\nfunction resolvePath(p, baseDir, useNodeResolution = false) {\n  if (path.isAbsolute(p)) return p;\n  if (useNodeResolution && !p.startsWith(\".\")) {\n    return dynrequire.resolve(p, { paths: [ baseDir ] });\n  }\n  return path.join(baseDir, p);\n}\n\nexports.resolvePath = resolvePath;\n\n/** Populates default values on a parsed options result. */\nfunction addDefaults(config, options) {\n  for (const [key, { default: defaultValue }] of Object.entries(config)) {\n    if (options[key] == null && defaultValue != null) {\n      options[key] = defaultValue;\n    }\n  }\n}\n\nexports.addDefaults = addDefaults;\n","/**\n * @fileoverview UTF8 utility.\n * @license Apache-2.0\n */\n\n// @protobufjs/utf8\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n  var len = 0,\n      c = 0;\n  for (var i = 0, l = string.length; i < l; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128)\n      len += 1;\n    else if (c < 2048)\n      len += 2;\n    else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i;\n      len += 4;\n    } else\n      len += 3;\n  }\n  return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1)\n    return \"\";\n  var parts = null,\n      chunk = [],\n      i = 0, // char offset\n      t;     // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128)\n      chunk[i++] = t;\n    else if (t > 191 && t < 224)\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n    else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xD800 + (t >> 10);\n      chunk[i++] = 0xDC00 + (t & 1023);\n    } else\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i)\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n  var start = offset,\n      c1, // character 1\n      c2; // character 2\n  for (var i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n};\n","if(typeof __WEBPACK_EXTERNAL_MODULE__525__ === 'undefined') { var e = new Error(\"Cannot find module 'assemblyscript'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__525__;","module.exports = __WEBPACK_EXTERNAL_MODULE__911__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(469);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"sourceRoot":""}